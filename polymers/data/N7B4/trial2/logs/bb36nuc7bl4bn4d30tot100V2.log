#atom_style bond #no stiffness
atom_style angle #with stiffness

boundary        p p p
###
# Pair interactions require lists of neighbours to be calculated
###

#neighbor 0.3 bin
neighbor 4 bin

neigh_modify every 1 delay 1 check yes
atom_modify sort 0 0
### Generate RESTART file, SPECIAL format, not a .txt file ###
### Useful if simulation crashes ###

restart 1000000 N7B4/trial2/restarts/$f.restart
restart 1000000 N7B4/trial2/restarts/bb36nuc7bl4bn4d30tot100V2.restart
#############################



### READ "start" data file ###

read_data N7B4/trial2/dats2/$f.dat
read_data N7B4/trial2/dats2/bb36nuc7bl4bn4d30tot100V2.dat
Reading data file ...
  orthogonal box = (-1000 -1000 -1000) to (1000 1000 1000)
  1 by 1 by 1 MPI processor grid
  reading atoms ...
  101 atoms
  scanning bonds ...
  3 = max bonds/atom
  scanning angles ...
  6 = max angles/atom
  reading bonds ...
  100 bonds
  reading angles ...
  123 angles
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     4 = max # of 1-2 neighbors
     4 = max # of 1-3 neighbors
     8 = max # of 1-4 neighbors
    12 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.050 seconds

######################

### READ "REstart" data file ###

######################



###
# Define groups (atom type 1 is group 'all')
###
group all type 1
101 atoms in group all


###
# Dump configs - "simple dumpings"
###

###
# Dump configs + box coords
###

dump   1   all   custom   1000  N7B4/trial2/trjs/$f.lammpstrj  id  x y z  ix iy iz
dump   1   all   custom   1000  N7B4/trial2/trjs/bb36nuc7bl4bn4d30tot100V2.lammpstrj  id  x y z  ix iy iz
dump_modify   1   format line "%d %.5f %.5f %.5f %d %d %d"

########################################################################


###################################################################
# Stiffness term
#
# E = K * (1+cos(theta)), K>0
#
angle_style   cosine
#change this coefficient to change stiffness (e.g. 1,5,10)
angle_coeff   1 1.0
###################################################################

###################################################################
# Pair interaction between non-bonded atoms
#
#  Lennard-Jones 12-6 potential with cutoff:
#  potential E=4epsilon[ (sigma/r)^12 - (sigma/r)^6]  for r<r_cut
#
#  1.12246 = 2^(1/6) is the minimum of the potential


pair_style      lj/cut 1.12246152962189
#pair_style      lj/cut 3

#
#  pair_modify shift yes adds a constant to the potential such

#  that E(r_cut)=0. Forces remains unchanged.
#

pair_modify     shift yes

#
#  pair_coeff for lj/cut, specify 4:
#    * atom type interacting with
#    * atom type
#    * epsilon (energy units)
#    * sigma (distance units)
#

pair_coeff      1 1 1.0 1.0
###################################################################

###################################################################
# Pair interaction between non-bonded atoms
#
#  soft potential, for PUSHING apart overlapping atoms
#  potential E=A*(1 + cos(pi*r/r_c))
#
#  1.12246 = 2^(1/6) is the cut-off r_c

#pair_style     soft 1.12246152962189

#
#  pair_coeff for soft, specify 3:
#    * atom type interacting with
#    * atom type
#    * A
#
#

#pair_coeff      1 1 100.0
###################################################################

###################################################################
# Pair interaction between bonded atoms
#
# Fene potential + Lennard Jones 12-6:

#
#  E= - 0.5 K R0^2 ln[ 1- (r/R0)^2]
#     + 4epsilon[ (sigma/r)^12 - (sigma/r)^6] + epsilon
#

bond_style   fene


#
# For style fene, specify:
#   * bond type
#   * K (energy/distance^2)
#   * R0 (distance)
#   * epsilon (energy)  (LJ component)
#   * sigma (distance)  (LJ component)
#


special_bonds fene #<=== I M P O R T A N T (new command)
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        1        1       
  special bond factors coul:  0        1        1       
     4 = max # of 1-2 neighbors
    12 = max # of special neighbors
  special bonds CPU = 0.000 seconds

bond_coeff   1   30   2   1.0   1.0


###################################################

###################################################################
# Pair interaction between bonded atoms
#
# Harmonic potential:
#
#  E= K * (R-R0)^2
#

#bond_style   harmonic

#
# For style harmonic, specify:
#   * bond type
#   * K (energy/distance^2)
#   * R0 (distance)
#

#bond_coeff   1   60.0   1.0
#bond_coeff   2   harmonic 0.1   1.0

###################################################
compute 1 all gyration
variable rog equal c_1
#compute 2 all coord/atom cutoff 1.1

#dump 2 all custom 10000 contact_number.dump id c_2


###
# Set up fixes
###
thermo_style   custom   step  temp enthalpy c_1
fix 1 all nve   ###NVE ensemble

fix 2 all   langevin   1.0 1.0 1.0  778655   ###Langevin integrator Tstart Tstop 1/friction rndseed


##### Sample thermodynamic info  (temperature, energy, pressure, etc.) #####
thermo 1000









############################################################################

###
# set timestep of integrator

timestep 0.01

###
# run integration for a number of steps
###
#run 0
#variable r equal c_1
#if "$r < 63.1" then "quit 1"

# lj potential minimum, cause molecule to explore
run 100000
Generated 0 of 0 mixed pair_coeff terms from geometric mixing rule
Last active /omp style is angle_style cosine/omp
Neighbor list info ...
  update: every = 1 steps, delay = 1 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5.1224615
  ghost atom cutoff = 5.1224615
  binsize = 2.5612308, bins = 781 781 781
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair lj/cut/omp, perpetual
      attributes: half, newton on, omp
      pair build: half/bin/newton/omp
      stencil: half/bin/3d
      bin: standard
WARNING: Communication cutoff 5.12246152962189 is shorter than a bond length based estimate of 5.455. This may lead to errors. (src/comm.cpp:723)
Per MPI rank memory allocation (min/avg/max) = 1861 | 1861 | 1861 Mbytes
   Step          Temp         Enthalpy         c_1      
         0   0              13.305636      7.3472875    
      1000   0.94024372     20.267116      6.181614     
      2000   1.0322492      21.662517      6.4144491    
      3000   0.98958914     19.62923       6.0519251    
      4000   0.90072319     19.326714      5.7787306    
      5000   1.0088178      22.409471      6.1790059    
      6000   0.9866193      20.898275      6.1691782    
      7000   0.99883142     18.479565      5.9968078    
      8000   1.0525052      21.143961      5.4868485    
      9000   0.90753571     19.931774      5.539293     
     10000   1.0222573      20.188881      5.4340832    
     11000   0.97672945     21.200938      5.9644293    
     12000   1.0937499      19.454838      6.0439162    
     13000   0.87692198     19.701768      6.3146739    
     14000   1.1464646      19.931929      6.2766329    
     15000   0.90217346     20.839099      6.7020049    
     16000   0.83054262     19.802108      7.1140201    
     17000   1.0193074      20.561167      6.1414315    
     18000   1.1116785      22.075909      5.6260607    
     19000   0.93721789     21.195634      5.5459074    
     20000   1.0429979      22.681831      5.9743492    
     21000   0.91480275     19.932935      6.2264273    
     22000   1.057224       21.259149      5.9436287    
     23000   1.1881328      21.68566       6.3035302    
     24000   0.94963412     21.751728      5.3072357    
     25000   1.0206316      20.585723      5.1989455    
     26000   1.0461322      22.271187      5.5287137    
     27000   0.95139371     19.437484      4.7512877    
     28000   0.93928955     21.335177      5.0868076    
     29000   0.91731278     20.017674      4.3203813    
     30000   0.94854125     19.396529      4.5477024    
     31000   1.0382013      20.259669      4.4224187    
     32000   0.98816227     20.8824        4.7981496    
     33000   1.0426993      21.146844      4.6055434    
     34000   1.1716114      21.641741      5.3181478    
     35000   1.036383       19.965725      4.9831239    
     36000   1.0346807      19.857173      4.8046651    
     37000   1.1034895      21.676921      4.574228     
     38000   1.0144357      21.802106      4.5550793    
     39000   0.98399444     18.820797      5.1324111    
     40000   1.1474531      21.191683      5.5479879    
     41000   1.0907603      20.14963       5.4600027    
     42000   0.91515876     19.990136      6.0221946    
     43000   0.96291676     21.337467      5.7020308    
     44000   1.0856035      21.24328       6.0940589    
     45000   1.0121593      19.913181      6.0488149    
     46000   1.0086493      21.128476      6.0709742    
     47000   1.1431688      20.527913      5.6078196    
     48000   1.0932334      19.652013      5.5600668    
     49000   1.0536422      19.394631      4.8896458    
     50000   0.93599663     22.210542      4.8784876    
     51000   1.0105059      19.442924      5.3094957    
     52000   0.94896091     20.644717      5.2457833    
     53000   1.0110556      21.792593      5.2295325    
     54000   0.97562031     19.932533      5.0443317    
     55000   1.0069471      20.312637      5.2260232    
     56000   0.930332       20.625384      4.8726903    
     57000   0.94496382     20.372506      4.1549639    
     58000   0.91424377     21.974567      4.5092176    
     59000   0.99520028     19.859144      4.9561792    
     60000   1.0060384      20.797382      4.9485964    
     61000   0.89279352     21.676577      4.1621759    
     62000   0.9338454      20.587743      4.4057112    
     63000   1.0609748      21.30796       4.424841     
     64000   1.0573126      21.842851      4.5221371    
     65000   0.99850826     19.365968      4.6285591    
     66000   1.1103518      21.507255      4.7527612    
     67000   0.98490338     19.571617      5.0015078    
     68000   0.94733626     19.377136      5.3969376    
     69000   1.0020684      19.622015      5.3601543    
     70000   0.94710635     19.98624       5.3348245    
     71000   1.0153174      21.563247      5.1679829    
     72000   1.0955252      21.074665      5.0343089    
     73000   0.87127862     20.720746      5.261093     
     74000   0.98550605     19.969997      5.5129067    
     75000   1.0200473      20.681489      5.7782011    
     76000   1.0658124      21.158456      5.9231731    
     77000   1.0694414      22.235838      5.4354201    
     78000   1.1178729      21.195323      5.5309927    
     79000   0.93797879     21.507641      5.3151176    
     80000   1.1320228      20.929849      5.4698538    
     81000   0.97215362     20.118393      5.9062421    
     82000   1.0370125      19.763426      5.831644     
     83000   1.0710113      21.452987      5.4699331    
     84000   0.88413524     20.71201       5.7959755    
     85000   1.0349979      21.353464      5.5529972    
     86000   0.91178317     20.272594      5.1313098    
     87000   1.0782664      21.541626      5.0964713    
     88000   0.94959933     20.010965      5.8124819    
     89000   0.99203554     21.645023      5.7449486    
     90000   1.08874        21.368716      5.4393531    
     91000   1.0944691      20.610576      4.9817819    
     92000   0.94036405     20.631933      5.0048749    
     93000   0.94051501     19.373576      5.0143884    
     94000   0.99144898     20.744676      4.7806132    
     95000   0.97528984     20.428004      5.1356033    
     96000   1.0421485      20.596182      5.1021389    
     97000   1.1426336      22.605641      4.2781363    
     98000   0.89965727     19.79307       4.3098421    
     99000   0.91585206     20.452587      4.5163319    
    100000   0.97786679     21.381563      4.5878211    
Loop time of 247.387 on 2 procs for 100000 steps with 101 atoms

Performance: 349250.192 tau/day, 404.225 timesteps/s
101.1% CPU use with 1 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.34637    | 0.34637    | 0.34637    |   0.0 |  0.14
Bond    | 0.37535    | 0.37535    | 0.37535    |   0.0 |  0.15
Neigh   | 245.79     | 245.79     | 245.79     |   0.0 | 99.36
Comm    | 0.013759   | 0.013759   | 0.013759   |   0.0 |  0.01
Output  | 0.1665     | 0.1665     | 0.1665     |   0.0 |  0.07
Modify  | 0.64412    | 0.64412    | 0.64412    |   0.0 |  0.26
Other   |            | 0.04867    |            |       |  0.02

Nlocal:            101 ave         101 max         101 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:              0 ave           0 max           0 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:           1991 ave        1991 max        1991 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 1991
Ave neighs/atom = 19.712871
Ave special neighs/atom = 1.980198
Neighbor list builds = 999
Dangerous builds = 0

# Replace lj potential, now collapse
pair_style      lj/cut 3

# Cutoff simul when gyration under 7
# Variable created with equal requires v_ + 'name'
fix 3 all halt 1000 v_rog < 7

run 3000000
Generated 0 of 0 mixed pair_coeff terms from geometric mixing rule
Last active /omp style is angle_style cosine/omp
Per MPI rank memory allocation (min/avg/max) = 1861 | 1861 | 1861 Mbytes
   Step          Temp         Enthalpy         c_1      
    100000   0.97786679     19.483364      4.5878211    
Fix halt condition for fix-id 3 met on step 101000 with value 3.8531591648863763 (src/fix_halt.cpp:237)
    101000   0.90317146     18.811587      3.8531592    
Loop time of 1.10565 on 2 procs for 1000 steps with 101 atoms

Performance: 781441.042 tau/day, 904.446 timesteps/s
103.6% CPU use with 1 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.013623   | 0.013623   | 0.013623   |   0.0 |  1.23
Bond    | 0.0050097  | 0.0050097  | 0.0050097  |   0.0 |  0.45
Neigh   | 1.0755     | 1.0755     | 1.0755     |   0.0 | 97.27
Comm    | 0.0001991  | 0.0001991  | 0.0001991  |   0.0 |  0.02
Output  | 0.0014605  | 0.0014605  | 0.0014605  |   0.0 |  0.13
Modify  | 0.0091395  | 0.0091395  | 0.0091395  |   0.0 |  0.83
Other   |            | 0.000702   |            |       |  0.06

Nlocal:            101 ave         101 max         101 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:              0 ave           0 max           0 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:           3569 ave        3569 max        3569 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 3569
Ave neighs/atom = 35.336634
Ave special neighs/atom = 1.980198
Neighbor list builds = 8
Dangerous builds = 0

# This simulation is done
# Move onto the next one
clear
  using 2 OpenMP thread(s) per MPI task
package omp 0
using multi-threaded neighbor list subroutines
next f
jump SELF

###
# Reference paper:
# K. Kremer and G. S. Grest
# Dynamics of entangled linear polymer melts: A molecular-dynamics simulation
# J Chem Phys 92, 5057 (1990)

##################################
# MIHIR: for branched polymers
# LJ minimum first to expand and explore, then collapse
###

###
# Looping through the various N7B4 polymers to simulate,
# define variables to switch through
variable f index bb36nuc7bl4bn4d30tot100V2 bb72nuc7bl9bn4d30tot200V2 bb109nuc7bl13bn4d30tot300V2 bb145nuc7bl18bn4d30tot400V2 bb181nuc7bl22bn4d30tot500V2 bb218nuc7bl27bn4d30tot600V2 bb254nuc7bl31bn4d30tot700V2 bb290nuc7bl36bn4d30tot800V2 bb327nuc7bl40bn4d30tot900V2 bb363nuc7bl45bn4d30tot1000V2 bb400nuc7bl50bn4d30tot1100V2 bb436nuc7bl54bn4d30tot1200V2
# variable f index bb36nuc7bl4bn4d30tot100 bb72nuc7bl9bn4d30tot200 bb109nuc7bl13bn4d30tot300 bb145nuc7bl18bn4d30tot400 bb181nuc7bl22bn4d30tot500 bb218nuc7bl27bn4d30tot600 bb254nuc7bl31bn4d30tot700 bb290nuc7bl36bn4d30tot800 bb327nuc7bl40bn4d30tot900 bb363nuc7bl45bn4d30tot1000 bb400nuc7bl50bn4d30tot1100 bb436nuc7bl54bn4d30tot1200
# variable f index
###


###
# Box and units  (use LJ units and periodic boundaries)
###

units lj
log N7B4/trial2/logs/$f.log
log N7B4/trial2/logs/bb72nuc7bl9bn4d30tot200V2.log
